[Commands]
; Syntax: <Item name>=<Left text>|<Right text>
; Known escape sequences: \\ \t \n \r
; A single, unescaped "|" will be the caret's new position after replacement
&A=<a href="#">|</a>
Div &Class=<div class="">|</div>
Div &Id=<div id="">|</div>
&Em=<em>|</em>
H&1=<h1>|</h1>
H&2=<h2>|</h2>
H&3=<h3>|</h3>
H&4=<h4>|</h4>
H&5=<h5>|</h5>
H&6=<h6>|</h6>
&Li=<li>|</li>
&Ol=<ol>|</ol>
&P=<p>|</p>
Spa&n=<span>|</span>
&Strong=<strong>|</strong>
St&yle=<style>|</style>
&Table=<table>|</table>
T&d=<td>|</td>
T&r=<tr>|</tr>
&Ul=<ul>|</ul>

[Toolbar]
; Syntax: <slot number>=<fileName>.bmp;<light-mode-icon-fileName>.ico;<dark-mode-icon-fileName>.ico
; Files are loaded from the %AppData%\Notepad++\plugins\Config\WebEdit folder, if found;
; otherwise default icons installed with WebEdit.dll will be used
; Example:
1=a.bmp;a.ico;a-dm.ico
2=dc.bmp;dc.ico;dc-dm.ico
3=di.bmp;di.ico;di-dm.ico
4=em.bmp;em.ico;em-dm.ico
5=h1.bmp;h1.ico;h1-dm.ico
6=h2.bmp;h2.ico;h2-dm.ico
7=h3.bmp;h3.ico;h3-dm.ico
8=h4.bmp;h4.ico;h4-dm.ico
9=h5.bmp;h5.ico;h5-dm.ico
10=h6.bmp;h6.ico;h6-dm.ico
11=li.bmp;li.ico;li-dm.ico
12=ol.bmp;ol.ico;ol-dm.ico
13=p.bmp;p.ico;p-dm.ico
14=sp.bmp;sp.ico;sp-dm.ico
15=s.bmp;s.ico;s-dm.ico
16=st.bmp;st.ico;st-dm.ico
17=t.bmp;t.ico;t-dm.ico
18=td.bmp;td.ico;td-dm.ico
19=tr.bmp;tr.ico;tr-dm.ico
20=ul.bmp;ul.ico;ul-dm.ico

[Tags]
; Tags are replaced with their Replacement when you select the
; "WebEdit\Replace Tag" menu item (Alt+Enter by default).
; Syntax: <Tag>=<Replacement>
; Tags are Unicode supported (UTF-8 encoding), and can contain
; both non-latin (á, β, の etc.) and latin (a-z, A-Z, 0-9) characters.
; Maximum length of a tag is 32 (single-byte) characters.
; The number of Tags is not limited. The pipe character "|" marks
; the caret position after the tag replacement.
; Known escape sequences:
; \r = carriage return (for Windows line endings)
; \n = new line
; \t = tab character
; \i = indentation
; \c = system clipboard contents
; \u = Windows username
; \x = current filename (without path) / document name
; \p = current full file path (including filename) / document name
; \d:"..." = Local date/time in the format specified between the quotes, e.g. \d:"yyyy-MM-dd HH:mm:ss" (2025-12-31 23:59:59) -- experimental!
; \| = |
; \\ = \ (for the sequences above, e.g. \\c, \\i etc. -- except.: \|, as it is already escaped)

; MIXED
docs=/**\n *  @file   \x\n *  @brief  Description|\n *  @author \u <mail@example.com>\n *  @date   \d:"yyyy-MM-dd"\n */
dox={**\n *  @file   \x\n *  @brief  Description|\n *  @author \u <mail@example.com>\n *  @date   \d:"yyyy-MM-dd"\n *\n *  @param string $param Parameter_Description\n *  @param etc.\n *\n *  @details For more information see: \n *}
func=/**\n *  Description|\n *\n *  @param string $var1 param1\n *  @param bool   $var2 param2\n *  @return True on success, false otherwise\n *\n *  @details Throw an exception in case of error!\n */
param=*  @param string $var| Parameter_Description
yx="|" => "",
ar=array();
arr=array(|)
Ar=Array();
Arr=Array(|);
AR=Array();
aar=array(\n\i"|" => "",\n);
aa='|' => '',
ai="|" => "",
aaa='|' => [\n\t => '',\n],
aat='\c|' => true,
aaf='\c|' => false,
aak='|', # 
fa=false
nf=!== false
ef==== false
nt=!== true
n0=!= 0
ne=!= "|"
neq=!= "|"
iq=== "|"
eq=== "|"
gt=>= 
ltt=<= 
iff=if (|) \n\i\n
ifi=if (isset(|))\n{\n\i\n}
ifif=if (is_file(|))\n{\n\i\n}
ifin=if (in_array('|', ''))\n{\n\i\n}
ifina=if (in_array($|, ['', '']))\n{\n\i\n}
if=if (|)\n{\n}
ife=if (|)\n{\n}\nelse\n{\n}
ifei=if (|)\n{\n\i\n}\nelse if ()\n{\n\i\n}\nelse\n{\n\i\n}
i=if (|) {\n\i\n}
ie=if (|) {\n\i\n} else {\n\i\n}
e=else {\n\i|\n}
el=else\n{\n\i|\n}
else=else\n{\n\i|\n}
eli=\nelse if (|)\n{\n\i\n}
eif=\nelse if (|)\n{\n\i\n}
elif=}\nelse if (|)\n{\n\i\n}
ei=} else if (|) {\n\i\n}
elrf=else return false;
elrt=else return true;
nn= . "\\n";
0=.= "|";
k=/* | */
g=global $|;
gl=global $|;
lorem=Lorem ipsum dolor sit amet
lipsum=Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla fringilla pharetra fermentum.\nVestibulum neque erat, bibendum ac sagittis et, pulvinar at urna. Donec sit amet ipsum quis velit cursus ultrices elementum id lacus.\nSed vel massa vitae turpis viverra adipiscing at nec odio. Quisque ac ligula metus. Vestibulum suscipit elit eget lacus pellentesque tempus. Suspendisse potenti.

; ECHOING
1='|'
11='111|',
111=111|', '
2=".|."
22="|", 
ee=. "|" .
ex=" . | . "
; xx=" . | . "
EX=`" . | . "`
ii=( (|) ? "" : "" )
iii=(|) ? "" : ""
ix=" . ( ($|) ? "" : "" ) . "
iix=' . ( ($|) ? "" : "" ) . '

; PHP MIXED
err=error_reporting(E_ALL & ~E_NOTICE);\nini_set('display_errors', '1');
hea=header('Content-Type: text/html; charset=utf-8');
hct=header('Content-Type: text/html; charset=utf-8');
hl=header('Location: |');
dl=$quoted = sprintf('"%s"', addcslashes(basename($file), '"\\\\'));\n$size   = filesize($file);\n\nheader('Content-Description: File Transfer');\nheader('Content-Type: application/octet-stream');\nheader('Content-Disposition: attachment; filename=' . $quoted); \nheader('Content-Transfer-Encoding: binary');\nheader('Connection: Keep-Alive');\nheader('Expires: 0');\nheader('Cache-Control: must-revalidate, post-check=0, pre-check=0');\nheader('Pragma: public');\nheader('Content-Length: ' . $size);\nreadfile($file);\nexit;
dl2=header("Content-type: text/csv|");\nheader("Content-Disposition: attachment; filename={$}.csv");
csv=$out = fopen('php://output', 'w');\nfputcsv($out, array('this|','is some', 'csv "stuff", you know."'));\nfclose($out);
poo=<?php | { ?>
p=<?php | ?>
ph=<?php\n\i|\n?>
pi=<?php if (|) { ?>
pic=<?php if (|) { ?>\n<?php } ?>
pie=<?php if (|) { ?>\n<?php } else { ?>
piee=<?php if (|) { ?>\n<?php } else if () { ?>\n<?php } else { ?>
pfe=<?php foreach ($| as ) { ?>
pfo=<?php foreach ($| as ) { ?>
pfee=<?php foreach ($| as ): ?>
pfoo=<?php foreach ($| as ): ?>
kv=$key => $val
pel=<?php } else { ?>
peli=<?php } else if (|) { ?>
pc=<?php }| ?>
cf=<?php }| ?>
ep=<?php }| ?>
ci=<?php }| ?>
pii=<?php if (|): ?>
peii=<?php elseif(|): ?>
pelii=<?php elseif(|): ?>
pee=<?php else: ?>
pen=<?php endif; ?>
pci=<?php endif; ?>
pef=<?php endforeach; ?>
pfc=<?php endforeach; ?>
pcf=<?php endforeach; ?>
pefo=<?php endfor; ?>
pe=<?php echo | ?>
pep=<?php print_r(|); ?>
per=<?php print_r(|); ?>
pei=<?php echo (|) ? "" : "" ?>
pec=<?php echo (|) ? " checked" : "" ?>
ped=<?php echo (|) ? " disabled" : "" ?>
pesd=<?php echo (|) ? "style=\\"display: none;\\"" : "" ?>
pedn=<?php echo (|) ? "display: none;" : "" ?>
xm=" . mysql_real_escape_string(|) . "
xme=" . mysql_real_escape_string(|) . "
xmr=" . mysql_real_escape_string(|) . "
xmre=" . mysql_real_escape_string(|) . "
mrx=" . mysql_real_escape_string(|) . "
cla=class | {\n\i\n\i\n\i\n\ifunction __construct()\n\i{\n\i\i\n\i}\n}
cons=function __construct(|)\n{\n\i\n}
fuu=function() use (|) {\n\i\n}
uu=use (|)
us=use (|)
use=use (|)
trm=trim($|, " \\t\\n\\r\0\\x0B");
trii=trim($|, " \\t\\n\\r\0\\x0B");
trim=trim($|, " \\t\\n\\r\0\\x0B");
tri=trim(
rtr=rtrim($|, " \\t\\n\\r\0\\x0B");
rtrim=rtrim($|, " \\t\\n\\r\0\\x0B");
ltrim=ltrim($|, " \\t\\n\\r\0\\x0B");
je=json_encode(|, JSON_FORCE_OBJECT);
jd=json_decode(|, true);
pj=print_r(json_encode([\n\i'result'  => '|',\n\i'message' => \n]));
std=new stdClass;
rnd=base_convert(uniqid('random|', true), 6, 36)
rand=base_convert(uniqid('random|', true), 6, 36)
diff=(new DateTime())->diff(new DateTime(\c|))->format('%a');

; PHP
tt=$this->
ttl=$this->lang['\c|'];
lan=$this->lang['\c|'];
tl=$this->lang['\c|'];
req=require __DIR__."/|.php";
rd=require __DIR__."/|.php";
rod=require_once __DIR__."/|";
rdd=require_once __DIR__."/|.php";
inc=include __DIR__."/|.php";
incc=include_once __DIR__."/|.php";
rr=$_REQUEST['|']
rrr=$_REQUEST
gg=$_GET['|']
ggg=$_GET
pp=$_POST['|']
ppp=$_POST
ss=$_SESSION['|']
sss=$_SESSION
fff=$_FILES['|']
cc=$_COOKIE['|']
ccc=$_COOKIE
ser=$_SERVER['|']
sep=$_SERVER['PHP_SELF']
sps=$_SERVER['PHP_SELF']
ps=PHP_SELF
PS=PHP_SELF
RA=REMOTE_ADDR
pess=<?php echo $_SERVER['PHP_SELF'] ?>
eps=<?php echo $_SERVER['PHP_SELF'] ?>
es=<?php echo $_SERVER['PHP_SELF'] ?>
ff=__FILE__
df=dirname(__FILE__)
dd=__DIR__ . "/|"
ddd=__DIR__
DS=DIRECTORY_SEPARATOR
sst=session_start();
ifa=if (is_array(|)) {\n\i\n}
ifap=if (is_array($_POST['|'])) {\n\i\n}
ifag=if (is_array($_GET['|'])) {\n\i\n}
ifs=if (!isset($_SESSION)) {\n\isession_start();\n}
ist=if (!isset($_SESSION)) {\n\isession_start();\n}
iss=if (!isset($_SESSION)) {\n\isession_start();\n}
ifisa=if (isset($_SESSION['adminid']))\n{\n\i|\n}
if14=if ( @$_SESSION['adminid'] == 14 )\n{\n\i|\n}
i14=if ( @$_SESSION['adminid'] == 14 )\n{\n\i|\n}
i6=if ( @$_SESSION['uid'] == 6622 )\n{\n\i|\n}
un=unset(
uns=unset($|);
uns=unset("|");
is=isset(|)
ip=isset($_POST['|'])
isp=isset($_POST['|'])
ig=isset($_GET['|'])
isg=isset($_GET['|'])
isse=isset($_SESSION['|'])
isa=is_array(|)
ina=in_array(|)
ak=array_keys(|);
em=empty(|)
pr=print_r(|);
prr=print_r(|, true)
ppr=print_r
spr=sprintf(|, $)
spt=sprintf($this->lang['|'], $);
spl=sprintf($this->lang['\c|'], $)
sprt=sprintf($this->lang['|'], $);
eb=echo "<br />\\n";\n
pre=echo "<pre style=\\"text-align:left;margin:10px;\\">";\nprint_r(|);\necho "</pre>";
pred=echo "<pre style=\\"text-align:left;margin:10px;\\">";\nvar_dump(|);\necho "</pre>";
prev=echo "<pre style=\\"text-align:left;margin:10px;\\">";\nvar_dump(|);\necho "</pre>";
prex=echo "<pre style=\\"text-align:left;margin:10px;\\">";\nprint_r(|);\necho "</pre>";\nexit;
prep='<pre>' . print_r(\c|, true) . '</pre>'
txt=echo "<textarea>";\nprint_r(|);\necho "</textarea><br />";
trav=if ($| instanceof Traversable)\n{\n\i\n}
vd=var_dump(|);
ve=var_export(|);
vee=var_export(|, true)
vdd=var_dump
vf=var_dump(function_exists("|"));
die=die("|");
xi=exit;
md=md5(|);
subs=substr($|, );
strp=strpos($|, "");
str=str_replace("|", "", 
stra=str_replace(["|", ""], ["", ""], 
sto=strtolower(
ico=iconv("ISO-8859-2", "UTF-8", 
icu=iconv("UTF-8", "ISO-8859-2", 
ic8=iconv("UTF-8", "ISO-8859-2", 
ico8=iconv("UTF-8", "ISO-8859-2", 
htmle=html_entity_decode($|, ENT_COMPAT \| ENT_HTML401);
ec=echo 
eii=echo ( (|) ? "" : "" );
ecc=echo "|";
lis=list($|, ) = ();
sle=sleep(|);
isf=is_file(|)
isd=is_dir(|)
num=str_replace(" ", "&nbsp;", number_format(|, 0, ',', ' '))
fv=filter_var(|, FILTER_VALIDATE_EMAIL)
fve=filter_var(|, FILTER_VALIDATE_EMAIL)
fvip=filter_var(|, FILTER_VALIDATE_IP)
valid=filter_var(|, FILTER_VALIDATE_EMAIL)
res=$result = mysql_query($query);\n
rm=$result = mysql_query($query);\n
rmi=$result = $db->query($query);
im=if (mysql_num_rows($|) != 0)\n{\n\i\n}
im0=if (mysql_num_rows($|) == 0)\n{\n\i\n}
imi=if ($result->num_rows != 0)\n{\n\i|\n}
imi0=if ($result->num_rows == 0)\n{\n\i|\n}
wm=while ($|_row = mysql_fetch_assoc($_res))\n{\n\i\n}
wmr=while ($row = mysql_fetch_assoc($result))\n{\n\i|\n}
wmi=while ($row = $result->fetch_assoc())\n{\n\i|\n}\n$result->close();
rfa=$row = $result->fetch_assoc();
re=$this->|->error
wh=while (|)\n{\n\i\n}
do=do\n{\n\i\n} while (|);
fo=for ($i = 0; $i < $|; $i++)\n{\n\i\n}
fe=foreach ($| as)\n{\n\i\n}
fee=foreach (| as )
as=as $|_key => $_val
sw=switch (|)\n{\n\icase '':\n\i\ibreak;\n\icase '':\n\i\ibreak;\n}
ca=case '|':\n\ibreak;
def=default
con=continue;
bre=break;
r=return |;
rt=return true;
rf=return false;
rn=return null;
erf=else return false;
ert=else return true;
q=$query
qq=$query = |;
tq=$this->query(|);
qr=$query = "|";\n$result = mysql_query($query, $conn);
qrw=$query = "|";\n$result = mysql_query($query, $conn);\nwhile ($row = mysql_fetch_assoc($result))\n{\n\i\n}
qri=$query = "|";\n$result = $this->db->query($query);\nwhile ($row = $result->fetch_assoc())\n{\n\i\n}
qc=$query = "SELECT COUNT(*) FROM | WHERE ";\n$count = mysql_fetch_row(mysql_query($query))[0];
qrc=$query = "SELECT COUNT(*) FROM | WHERE  = ''";\n$count = $this->db->query($query)->fetch_row()[0];\nif ($count == 0)\n{\n\i\n}
loc=localhost
mysqli=@$db = new mysqli($db_host, $db_username, $db_password, $db_name);\n$db->set_charset("utf8");\nif ($db->connect_error) {\n\idie('Database connection error (' . $db->connect_errno . ') '\n\i\i. $db->connect_error);\n}
pdo=$dsn = "mysql:host={$db_host|};dbname={$db_name};charset=UTF8";\ntry {\n\t$dbh = new PDO($dsn, $db_username, $db_password, array(\n\t\tPDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,\n\t\tPDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_OBJ\n\t));\n} catch (PDOException $e) {\n\techo 'Connection failed: ' . $e->getMessage();\n}\n\n// $dbh = null; # Close connection
pq=$stmt = $dbh->prepare("SELECT * FROM | WHERE  = :");\n$stmt->execute([\n\t':' => ,\n]);\nwhile ($row = $stmt->fetch()) {\n\t// $row->;\n}
pqu=$stmt = $dbh->prepare("UPDATE | SET  = :,  = :");\n$stmt->execute([\n\t':' => ,\n\t':' => ,\n]);\n$stmt->fetch();
pw=while ($row = $stmt->fetch())
pww=while ($row = $stmt->fetch())\n{\n\t\n}
mc=$conn = mysql_connect(|, , ) OR die("Connection error: " . mysql_error());
conn=$conn = mysql_connect(|, , ) OR die("Connection error: " . mysql_error());
conni=@$this->db = new mysqli($dbhost, $dbuser, $dbpass, $dbname);\n@$this->db->set_charset("utf8") OR die("Please set the database accesses.");
ms=mysql_select_db(|, $conn) OR die("Database error: " . mysql_error($conn));
msd=mysql_select_db(|, $conn) OR die("Database error: " . mysql_error($conn));
my=mysql_query("|");
myy=mysql_query("|
mq=mysql_query($|);
myq=mysql_query($|);
mys=mysql_query($query);\n
myc=mysql_query("|", $conn);
mqc=mysql_query(|, $conn);
me=mysql_error()
mf=mysql_fetch_assoc($|_res);
mfr=mysql_fetch_assoc($result);\n
mfa=mysql_fetch_array($|_res);
row=$row = mysql_fetch_assoc($result);\n
mfi=$result->fetch_assoc();
mre=mysql_real_escape_string(|)
mri=$this->db->escape_string(|)
esc=$this->db->escape_string(|)
tre=$this->db->escape_string(|)
msa=mysql_affected_rows()
fue=function_exists("|")
clae=class_exists("|")
mee=method_exists($|, "")
met=method_exists("|", "")
fpc=file_put_contents(__DIR__."/|.", $);
fg=file_get_contents(|);
fgc=file_get_contents(|);
base=base64_encode(|);
puf=public function |()\n{\n\i\n}
fun=function
fu=function |()\n{\n\i\n}
fn=array_map(fn($val) => explode(' ', $val)[0], $|)
pub=public function |()\n{\n\i\n}
pro=protected function |()\n{\n\i\n}
prot=protected function |()\n{\n\i\n}
pri=private function |()\n{\n\i\n}
priv=private function |()\n{\n\i\n}
sta=static public function |()\n{\n\i\n}
stat=static public function |()\n{\n\i\n}
psf=static public function |()\n{\n\i\n}
spf=static public function |()\n{\n\i\n}
mn=mysql_num_rows($|) == 0
mnr=mysql_num_rows($|)
mni=$result->num_rows != 0
imq=if (mysql_query(|) !== false)\n{\n\i\n}
ifm=if (!mysql_query(|))\n{\n\i\n}
x={$|}
xx=${|}
yy={|}
y=${|}
xp={$_POST['|']}
xg={$_GET['|']}
xa=$|[''];
imp=implode('|', $)
imm=implode(', ', $|)
exp=explode('|', $)
exx=explode(', ', $|)
coo=count(|)
rou=round(|)
dy=date("Y-m-d")
day=date("Y-m-d H:i:s", strtotime("|"))
xd=" . date("Y-m-d H:i:s") . "
xdy=" . date("Y-m-d H:i:s") . "
dym=date("Y-m-d H:i:s")
dys=date("Y-m-d", strtotime("|"))
ym=Y-m-d H:i:s
yh=Y-m-d H:i:s
ymd=Y-m-d
0=0000-00-00 00:00:00
00=0000-00-00 00:00:00
preg=preg_replace('/^(|)$/', '${1}', 
preg0=preg_replace('/[^0-9|]/', '', 
pregm=preg_match($pattern, $|, $matches);
fp=$fp = fopen('|.txt', 'w');\nfwrite($fp, );\nfclose($fp);
fop=$fp = fopen('|.txt', 'w');\nfwrite($fp, );\nfclose($fp);
curl=$ch = curl_init();\ncurl_setopt($ch, CURLOPT_URL, $url);\ncurl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);\ncurl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);\ncurl_setopt($ch, CURLOPT_POST, 1);\ncurl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);\ncurl_setopt($ch, CURLOPT_MAXREDIRS, 10);\ncurl_setopt($ch, CURLOPT_TIMEOUT, 20);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\ncurl_setopt($ch, CURLOPT_POSTFIELDS, $postfields);\n$data = curl_exec($ch);
dom=$doc = new DOMDocument();\n@$doc->loadHTML(mb_convert_encoding($data, 'HTML-ENTITIES', 'UTF-8'));\n$path = new DomXPath($doc);\n$nodevalue = $path->query("//*[contains(@class, 'myclass|')]")->item(0)->nodeValue;
domi=$doc = new DOMDocument();\n@$doc->loadHTML(mb_convert_encoding($data, 'HTML-ENTITIES', 'UTF-8'));\n$path = new DomXPath($doc);\n$nodevalue = $path->query('//input[@name="username|"]')->item(0)->getAttribute('value');
cerr=if(curl_errno($ch))\n{\n\iecho "Curl error:|" . curl_error($ch);\n}
th=throw new Exception("|");
tne=throw new \\Exception("|");
tns=throw new \\Exception( sprintf($this->lang['|'], ) );
tsl=throw new \\Exception( sprintf($this->lang['|'], ) );
tnl=throw new \\Exception( $this->lang['|'] );
try=try {\n\i|\n} catch (\\Exception $e) {\n\iecho "<pre style=\"text-align:left;margin:10px;\">";\n\iprint_r($e->getMessage());\n\iecho "</pre>"; \n}
the=throw new Exception($|);
thee=throw new Exception('|');
tp=throw new \\Exception("<pre style=\\"text-align:left\\">".print_r(|, true)."</pre>");
dns=dns_get_record("{}.", DNS_ALL - DNS_PTR)

; LARAVEL
; 'l' prefix = 'Laravel'
; 'a' prefix = 'alternative expression' without -> (arrow)
lto=->toSql();
lts=->toSql();
tos=toSql()
tsq=->toSql();
hat=DB::schema()->hasTable('|')
cht=DB::schema()->hasTable('|')
ren=DB::schema()->rename('|', '');
crea=DB::schema()->create('|', function($table)\n{\n\i$table->increments('id');\n\i$table->integer('');\n\i$table->string('');\n\i$table->timestamp('date')->default(DB::raw('CURRENT_TIMESTAMP'));
med=$table->mediumText('\c');
lar=$result = DB::table('|')
rat=$result = DB::table('|')\n\i->where('', )
lconn=$result = DB::connection('\c')\n\i->table('|')\n\i->where('', )
slj=$result = DB::table(DB::raw('| as '))\n\i->leftJoin(DB::raw(' as '), '', '=', '')\n\i->where('', )
rlj=$result = DB::table(DB::raw('| as '))\n\i->leftJoin(DB::raw(' as '), '', '=', '')\n\i->where('', )
tlj=$result = DB::table(DB::raw('| as '))\n\i->leftJoin(DB::raw(' as '), '', '=', '')\n\i->where('', )
clj=$result = DB::table(DB::raw('| as '))\n\i->leftJoin(DB::raw(' as '), '', '=', '')\n\i->where('', )
lr=$result = DB::table('|')
rl=$result = DB::table('|')
lra=$result = DB::table('| as ')
rla=$result = DB::table('| as ')
lars=$result = DB::table('|')\n\t->select()\n\t->where()\n\t->get();
lac=DB::table(|)->where('', )->count();
lde=DB::table(|)->where('id', )->delete();
led=DB::table(|)->where('id', )->delete();
del=DB::table('|')\n\i->where('id', )\n\i->delete();
cad=DB::table(|)->where('id', )->delete();
lap=$result = DB::table('|')->where('', )->update(['' => ])
lup=DB::table('|')\n\i->where('id', )\n\i->update([\n\i\i'' => '',\n\i]);
lut=DB::table('|')\n\i->where('id', )\n\i->update([\n\i\i'' => '',\n\i]);
cin=DB::table(|)->insert();
lin=DB::table('|')->insert([\n\i'' => '',\n\i'' => '',\n]);
linn=DB::table('|')->insert([\n\i['' => '', '' => ''],\n\i['' => '', '' => ''],\n]);
ing=DB::table('|')->insertGetId(['' => ]);
lig=DB::table('|')->insertGetId([\n\i'' => '',\n]);
catt="concat(`data`, '| => {$}\\n')"
CAT=CONCAT(|, ' ', )
lt=DB::table('|')
ct=DB::table('|')
lat=DB::table(|)
cat=DB::table('|')
dbr=DB::raw('|')
raw=DB::raw('|')
cr=DB::raw(
car=DB::raw('|')
rab=DB::raw('binary |')
ctr=DB::table(DB::raw('| as '))
ld=DB::dropIfExists('|');
dro=DB::drop('|');
ltra=DB::connection()->transaction(function($conn) {\n\i$conn->table('|')\n});
see=->select('|', '')
se=->select('|')
ase=select('|', '')
asel=select('|', '')
seg=->select(DB::raw('GROUP_CONCAT(|) as '))
sec=->select(DB::raw('COUNT(*) as |'))
sr=->select(DB::raw('|'))
sed=->select(DB::raw('|'))
inse=->insert($|);
ins=->insert(['|' => , '' => ])
ain=insert(['|' => , '' => ])
inss=->insert([\n\i'|' => ,\n\i'' => ,\n])
ains=insert([\n\i'|' => ,\n\i'' => ,\n])
up=->update(['|' => ])
upd=->update([\n\i'|' => ,\n\i'' => ,\n])
upp=->update([\n\i'|' => ,\n\i'' => ,\n])
aup=update(['|' => ])
de=->delete();
ade=delete();
tru=->truncate();
atru=truncate();
we=->where('|', )
wee=->where([\n\i['|', ],\n\i['', ],\n])
weee=->where('|', '')
awe=where('|', )
wl=->where('|', 'like', '')
wel=->where('|', 'like', '')
awl=where('|', 'like', '')
awel=where('|', 'like', '')
wnl=->where('|', 'not like', '')
awnl=where('|', 'not like', '')
wer=->where(DB::raw('|'), )
werl=->where(DB::raw('|'), 'like', )
were=->where('|', 'regexp', '(^\|\\ \|\\,)'.$.'($\|\\ \|\\,)')
awer=where('|', 'regexp', '(^\|\\ \|\\,)'.$.'($\|\\ \|\\,)')
weg=->where('|', '>', )
welt=->where('|', '<', )
wen=->where('|', '!=', )
awee=where('|', '')
awea=where('|', '!=', )
web=->where(DB::raw('binary |'), $)
webe=->whereBetween('|', [, ]);
wf=->where(function($query) {\n\i$query->where('|', );\n})
wef=->where(function($query) {\n\i$query->where('|', );\n})
awf=where(function($query) {\n\i$query->where('|', );\n})
wfu=->where(function($query) use (|) {\n\i$query->where();\n})
wefu=->where(function($query) use (|) {\n\i$query->where();\n})
awfu=where(function($query) use (|) {\n\i$query->where();\n})
wr=->whereRaw('|', [])
owr=->orWhereRaw('|', [])
wera=->whereRaw('| :', [\n\i'' => $\n])
awr=whereRaw('|', [])
ow=->orWhere('|', )
owe=->orWhere('|', )
owel=->orWhere('|', 'like', '')
aow=orWhere('|', )
owl=->orWhere('|', 'like', '')
owera=->orWhere(DB::raw('|'), )
owf=->orWhere(function($query) {\n\i$query->where('|', );\n})
aowf=orWhere(function($query) {\n\i$query->where('|', );\n})
owfu=->orWhere(function($query) use (|) {\n\i$query->where();\n})
aowfu=orWhere(function($query) use (|) {\n\i$query->where();\n})
wn=->whereNull('|')
wein=->whereNull('|')
wnn=->whereNotNull('|')
wenn=->whereNotNull('|')
own=->orWhereNull('|')
owin=->orWhereNull('|')
owen=->orWhereNull('|')
lj=->leftJoin(DB::raw('| as '), '', '=', '')
ljj=->leftJoin(DB::raw('|'), function($join) {\n\i$join->on('', '=', '')->where('', '=', '');\n})
alj=leftJoin(DB::raw('| as '), '', '=', '')
join=->leftJoin(DB::raw('|'), function($join) {\n\i$join->on('', '=', '')->orJoin('', '=', '');\n})
onn=->leftJoin(DB::raw('|'), function($join) {\n\i$join->on('', '=', '')->orJoin('', '=', '');\n})
whe=->when(|, function ($query) {\n\ireturn $query->where('', '');\n})
when=->when(|, function ($query) use ($) {\n\ireturn $query->where('', $);\n})
wei=->whereIn('|', $)
awin=whereIn('|', $)
wni=->whereNotIn('|', $)
awni=whereNotIn('|', $)
gb=->groupBy('|')
agb=groupBy('|')
ha=->having('|', '', )
aha=having('|', '', )
ob=->orderBy('|', 'asc')
aob=orderBy('|', 'asc')
obd=->orderBy('|', 'desc') 
aobd=orderBy('|', 'desc') 
obr=->orderByRaw('| asc');
aobr=orderByRaw('| asc');
subq=DB::table( DB::raw("({$sub|->toSql()}) as sub") )\n\i->mergeBindings($sub)\n\i// ->groupBy('domain');
lim=->take(|)
alim=->skip(|)->take()
lc=->count()
lco=->count()
cnt=count(|)
alc=count()
ge=->get();
ag=get()
age=get()
rg=$result->get()
rq=$result->get()
feg=foreach ($result->get() as $row)
fer=foreach ($result->get() as $row)\n{\n\i|\n}
fir=first()
fii=first()
lf=first();
afi=first();
plo=->pluck('|');
plu=->pluck('|');
apl=pluck('|');
ap=pluck('|')
lli=->lists('|');
lii=->lists('|');
alli=lists('|');
alii=lists('|');
toa=->toArray();
asa=->toArray();
ten=$table->enum('|', []);
cif=if ( !DB::schema()->hasTable('|') )\n{\n\iDB::schema()->create(\n\i\i'',\n\i\ifunction ($table) {\n\i\i\i$table->increments('id');\n\i\i\i$table->string('');\n\i\i\i$table->integer('');\n\i\i\i$table->dateTime('');\n\i\i}\n\i);\n}
ltr=DB::transaction(function()\n{\n\iDB::table('|')->truncate();\n\iDB::table('')->insert($);\n});
lfe=foreach ($result->get() as $row)
lq=$queries = DB::getQueryLog();\nend($queries)
lgq=$queries = DB::getQueryLog();\nend($queries)
lg=$queries = DB::getQueryLog();\necho "<pre style=\"text-align:left;margin:10px;\">";\nprint_r(end($queries));\necho "</pre>";
lqe=$queries = DB::getQueryLog();\necho "<pre style=\"text-align:left;margin:10px;\">";\nprint_r(end($queries));\necho "</pre>";
tryy=try {\n\i|\n} catch (\\Exception $e) {\n\i$queries = DB::getQueryLog();\n\iecho "<pre style=\"text-align:left;margin:10px;\">";\n\iecho $e->getMessage();\n\iprint_r(end($queries));\n\iecho "</pre>";\n\ireturn false;\n}

; MYSQL
SEL=SELECT * FROM | WHERE  = ''
SELL=SELECT * FROM `|` WHERE `` = ''
SELI=SELECT * FROM | WHERE  IN ()
SELC=SELECT COUNT(*) FROM | WHERE  = ''
SLJ=SELECT\n\i*\nFROM | AS \nLEFT JOIN  AS  ON . = .\nWHERE 
SLJJ=SELECT * FROM `|` `` LEFT JOIN `` `` ON ``.`` = ``.`` WHERE `` = ''
DEL=DELETE FROM | WHERE id = ''
DELL=DELETE FROM `|` WHERE `id` = ''
INS=INSERT INTO | (, ) VALUES ('', '')
INSS=INSERT INTO `|` (``, ``) VALUES ('', '')
UP=UPDATE | SET  = '',  = ''
UPP=UPDATE `|` SET `` = '', `` = ''
UPD=UPDATE | SET  = '',  = ''
UPDD=UPDATE `|` SET `` = '', `` = ''
ULJ=UPDATE | LEFT JOIN  ON . = . SET  = '',  = ''
UPJ=UPDATE | AS  LEFT JOIN  AS  ON . = . SET  = '' WHERE  
TRU=TRUNCATE TABLE `|`
TRUN=TRUNCATE TABLE `|`
F=FROM
LJ=LEFT JOIN
LJO=LEFT JOIN | ON . = .
RJ=RIGHT JOIN
RJO=RIGHT JOIN |\nON = 
W=WHERE | 
WW=WHERE `|` 
B=BINARY |
BB=BINARY `|`
ON=ON |. = . 
ONN=ON `|`.`` = ``.`` 
HAV=SELECT COUNT(*) AS 'count',\n\iGROUP_CONCAT(id ORDER BY id SEPARATOR ', ') AS 'id',\n\i|\nFROM \nWHERE \nGROUP BY BINARY \nHAVING count > 1\nORDER BY count DESC
X=`|`
XY=`|`.``
XX=`XXY|`, 
XXY=XXY|`, `
Y=`|`.
YX=`|` = '', 
LI=LIKE '|' 
Lx=LIKE '" . | . "' 
Lxx=LIKE '%" . | . "%' 
BEET=| BETWEEN '' AND ''
BW=| BETWEEN '' AND ''
SW=CASE\n\iWHEN id| LIKE 1 THEN ''\nEND AS 'my_case'
SWIT=CASE id|\n\iWHEN 1 THEN ''\n\iELSE ''\nEND AS 'my_case'
SWITCH=CASE id|\n\iWHEN 1 THEN ''\n\iELSE ''\nEND AS 'my_case'
A=AND |
AA=AND `|`
O=OR |
OO=OR `|`
IN=IN (\n\i|\n)
INN=IS NOT NULL 
NI=NOT IN (|)
GB=GROUP BY | 
GBB=GROUP BY `|` 
HA=HAVING 
OBB=ORDER BY `|` 
OB=ORDER BY | 
ORD=ORDER BY `|`
ord=ORDER BY |
D=DESC
DE=DESC
OBF=ORDER BY FIELD(|, '') DESC,  ASC
FI=FIELD(|, '') DESC
FIELD=FIELD(|, '') DESC
L=LIMIT 1
L1=LIMIT 1
LIM=LIMIT 1
GC=GROUP_CONCAT(DISTINCT | ORDER BY  SEPARATOR ', ')
GCC=GROUP_CONCAT(`|`)
GP=GROUP_CONCAT(|),
GPD=GROUP_CONCAT(DISTINCT | ORDER BY id DESC SEPARATOR ','),
S=SUM(|)
SS=SUM(`|`)
DA=| <= ( NOW( ) - INTERVAL 6 MONTH )
DIFF=| <= ( NOW( ) - INTERVAL 6 MONTH )
SU=SUBSTRING(date|, 1, -3)
SUB=SUBSTRING(date|, 1, -3)
SI=SUBSTRING_INDEX(datetime|, ' ', 1)
POS=SUBSTRING_INDEX(datetime|, ' ', 1)
STR=LOCATE('|', )
LEN=LENGTH(|) = 
REP=REPLACE(colname|, 'from', 'to')
CAST=CAST(| AS UNSIGNED);

; SQLIte
SDIFF=(JULIANDAY(datetime(renewalDueAt|, 'localtime')) - julianday(date('now'), 'start of day')) AS 'days'
SDATE=strftime('%Y-%m-%d %H:%M:%S', datetime(renewalDueAt|, 'localtime'))

; JS
ja=javascript:;
jx=' + | + '
jxx='+|+'
jxi='+\c|+'
tu=typeof | != 'undefined'
typ=typeof | != 'undefined'
tun=typeof | != 'undefined'
itu=if (typeof | != 'undefined') {\n\i\n}
itun=if (typeof | != 'undefined') {\n\i\n}
itue=if (typeof | != 'undefined') {\n\i\n} else {\n\i\n}
f=function|() {\n\i\n}
t=this
len=length
whi=which
al=alert(|);
lo=console.log(|);
log=console.log(|);
sub=substring(|);
sm=submit();
epr=e.preventDefault(); // only action stopped
stop=e.stopPropagation(); // no (click) event fired
io=indexOf('|')
lai=lastIndexOf('|')
set=setTimeout(function() {\n\i\n}, |);
substr=substring(|);
jfo=for (var i = 0; i < |; i++)\n{\n\i\n}
fvi=for (var i in |) {\n\i\n}
foi=for (var i in |) {\n\i\n}
jin=for (var i in |) {\n\i\n}
wil=window.location.href = |;
wo=window.open(|, "_blank");

; JQUERY
jp=(function ($) {\n\i$.fn.| = function ( options ) {\n\i\i\n\i}\n}( jQuery ));
dr=$(document).ready(function(){\n\i|\n});
top=$('html, body').animate({scrollTop: $('#|').offset().top}, 400);
scroll=$('html, body').animate({scrollTop: $('#|').offset().top}, 400);
don=$(document).on('|', '', function(){\n\i\n});
doc=$(document).on('click', '|', function(){\n\i\n});
dok=$(document).on('keyup', '|', function(){\n\i\n});
dob=$(document).on('blur', '|', function(){\n\i\n});
dos=$(document).on('submit', '|', function(e){\n\ie.preventDefault();\n\i\n});
doch=$(document).on('change', '|', function(){\n\i\n});
dof=$(document).on('focus', '|', function(){\n\i\n});
on=on('|', function(){\n\i\n});
onc=on('click', function(){\n\i|\n});
och=on('change', function(){\n\i|\n});
ok=on('keyup', function(){\n\i|\n});
ea=each(function() {\n\i|\n});
eaa=each(|, function() {\n\i\n});
jn={name: '|', value: ''}
name=$('[name="|"]').
naa=$('[name="|"]').
na=[name="|"]
j=$(|).
jj=$('|').
id=$('#|').
cl=$('.|').
hh=html('|');
cli=click(|);
blu=blur(|);
foc=focus(|);
ind=index(|);
v=val(|)
htm=html()
html=html('|')
da=data('|')
dat=data('|', );
eqq=eq(elEq)
ek=eq(elKey)
ele=elEq = $('.|').index(  );
vele=var elEq = $('.|').index(  );
eleq=var elEq = $('.|').index(this);
gee=$.get('|', {}, function(){\n\i\n});
po=$.post('|', {}, function(){\n\i\n}).fail(function() {\n\i\n});
fail=.fail(function() {\n\i|\n})
this=$(this).
fin=find('|')
clo=closest('|')
pu=parentsUntil('|')
pru=prevUntil('|')
nu=nextUntil('')
cx=css({'|': ''})
ani=animate({'|': ''})
tg=toggle();
tog=toggle();
toc=toggleClass('|');
sux=slideUp(|);
su=slideUp('fast');
sus=slideUp('slow');
suf=slideUp('fast');
sdx=slideDown(|);
sd=slideDown('fast');
sdf=slideDown('fast');
sds=slideDown('slow');
slux=slideUp(|);
slu=slideUp('fast');
slus=slideUp('slow');
sluf=slideUp('fast');
sldx=slideDown(|);
sld=slideDown('fast');
sldf=slideDown('fast');
slds=slideDown('slow');
st=slideToggle('fast');
slt=slideToggle('fast');
slf=slideToggle('fast');
stt=slideToggle(|);
stl=slideToggle('slow');
sls=slideToggle('slow');
fi=fadeIn(|);
fis=fadeIn('slow');
fif=fadeIn('fast');
fot=fadeOut(|);
fos=fadeOut('slow');
fof=fadeOut('fast');
ft=fadeToggle('fast');
fts=fadeToggle('slow');
ftt=fadeToggle(|);
hc=hasClass('|')
ac=addClass('|');
rc=removeClass('|');
rem=remove();
att=attr('|', );
attr=attr('data-|')
atd=attr('disabled', true);
atf=attr('disabled', false);
prp=prop('|', );
prop=prop('|', );
prc=prop('checked', true|);
prf=prop('checked', false|);
json=$.parseJSON(data|);
; JS=if (data.substring(0, 1) == '{') {\n\tvar JData = $.parseJSON(data);\n}
JSON=try {\n\ilet JData = $.parseJSON(data);\n} catch (error) {\n\i|\n}

; CSS
impo=!important
ta=text-align: right;
tal=text-align: left;
tel=text-align: left;
tar=text-align: right;
ter=text-align: right;
tac=text-align: center;
tec=text-align: center;
taj=text-align: justify;
tej=text-align: justify;
lh=line-height: |;
ls=letter-spacing: |px;
l=left
ce=center
rii=right
co=color: |;
color=color: |;
gr=green
ov=overflow: hidden;
oh=overflow: hidden;
ovh=overflow: hidden;
of=overflow: hidden;
os=overflow: scroll;
ofs=overflow: scroll;
ovs=overflow: scroll;
tow=text-overflow: ellipsis;
tov=text-overflow: ellipsis;
dis=display: |;
din=display: none;
dib=display: inline-block;
dn=display: none;
db=display: block;
vh=visibility: hidden;
vis=visibility: visible;
sdn=style="display:none"
sdb=style="display:block"
sdi=style="display:inline-block"
sfr=style="float:right"
sfl=style="float:left"
ib=inline-block
opa=opacity: |;
tdn=text-decoration: none;
tdu=text-decoration: underline;
ffa=font-family:|;
fon=font-family: |;
fofa=font-family: |;
fs=font-size: |;
fst=font-style: |;
fsi=font-style: italic;
fsn=font-style: normal;
fsd=font-style: normal;
fw=font-weight: |;
fwb=font-weight: bold;
fwn=font-weight: normal;
fwd=font-weight: normal;
wsn=white-space: nowrap;
wsp=white-space: pre-wrap;
ita=italic
ba=background: |;
bg=background: transparent url(|.png) center center no-repeat;
bgn=background: none;
bc=background-color: |;
bac=background-color: |;
bi=background-image: url(|.png);
bim=background-image: url(|.);
bin=background-image: none;
bp=background-position: 0 |;
bap=background-position: |% %;
bapc=background-position: center center;
ba=background-repeat: |;
bar=background-repeat: no-repeat;
ban=background-repeat: no-repeat;
barn=background-repeat: no-repeat;
bs=background-size: |;
bas=background-size: |;
cov=cover
nr=no-repeat
nor=no-repeat
tra=transparent
trans=transparent
ts=text-shadow: 1px 1px 0 #FFF;
tsn=text-shadow: none;
boxs=box-shadow: 0 0 20px 0 rgba(0, 0, 0, .|);
rad=border-radius: 5px;
tran=transition: all .3s;
tranz=transition: all .3s;
traf=transform: translate(0, 10%);
trafr=transform: rotate(-5deg);
rgba=rgba(255, 255, 255, .|)
rgw==rgba(255, 255, 255, .|)
rgb=rgba(0, 0, 0, .|)
rgf=rgba(0, 0, 0, .|)
mw=max-width: |px;
maw=max-width: |px;
mws=max-width: |%;
miw=min-width: |px;
minw=min-width: |px;
miws=min-width: |%;
bo=border: 1px solid #|;
bor=border: 1px solid #|;
borde=border: 1px solid #|;
border=border: 1px solid #|;
bon=border: none;
boc=border-color: #|;
bos=border-style: solid;
bw=border-width: |;
bl=border-left: 1px solid #|;
bln=border-left: none;
bbr=border-right: 1px solid #|;
brr=border-right: 1px solid #|;
brn=border-right: none;
bt=border-top: 1px solid #|;
btn=border-top: none;
bb=border-bottom: 1px solid #|;
bbn=border-bottom: none;
bcc=border-collapse: collapse;
bco=border-collapse: collapse;
bcs=border-collapse: separate;
w=width: |px;
wi=width="|"
ws=width: |%;
wa=width: auto;
wis=width: 100%;
h=height: |px;
he=height="|"
hs=height: |%;
hei=height: 100%;
mh=max-height: |px;
mih=min-height: |px;
le=left: |px;
ri=right: |px;
to=top: |px;
bot=bottom: |px;
pd=padding: |px;
pad=padding: |px;
pdt=padding-top: |px;
pt=padding-top: |px;
pb=padding-bottom: |;
pab=padding-bottom: |;
pm=padding-bottom: |px;
pl=padding-left: |px;
par=padding-right: |px;
m=margin: |;
ma=margin: 0 auto;
mt=margin-top: |px;
mr=margin-right: |px;
mra=margin-right: auto;
ml=margin-left: |px;
mla=margin-left: auto;
mb=margin-bottom: |px;
fl=float: left;
fr=float: right;
flr=float: right;
fln=float: none;
cb=clear: both;
cll=clear: left;
cle=clear: left;
clr=clear: right;
cln=clear: none;
cp=cursor: pointer;
cup=cursor: pointer;
cn=cursor: default;
cun=cursor: default;
cd=cursor: default;
cud=cursor: default;
va=vertical-align: |px
vet=vertical-align:top;
vt=vertical-align: top;
vat=vertical-align: top;
vb=vertical-align: bottom;
vab=vertical-align: bottom;
vec=vertical-align:middle;
vc=vertical-align: middle;
vem=vertical-align:middle;
vac=vertical-align: middle;
vm=vertical-align: middle;
vam=vertical-align: middle;
pa=position: absolute;
poa=position: absolute;
pos=position: |;
posa=position: absolute;
por=position: relative;
posr=position: relative;
pf=position: fixed;
rel=relative
abs=absolute
zi=z-index: |;
ty=[type='|']
nm=[name='|']
it=input[type='|']
itn=input[name='|']
its=input[type='submit']
itt=input[type='text']
lot=last-of-type
colu=-webkit-column-count: 2;\n-moz-column-count: 2;\ncolumn-count: 2;
col1=-webkit-column-count: 1;\n-moz-column-count: 1;\ncolumn-count: 1;
col2=-webkit-column-count: 2;\n-moz-column-count: 2;\ncolumn-count: 2;
col3=-webkit-column-count: 3;\n-moz-column-count: 3;\ncolumn-count: 3;

; HTML
H=<!-- | -->
LH=<!--
RH=|-->
CH=-->
HC=-->
HH=<!-- \c -->
qw=„|”
qu=&quot;
nb=&nbsp;
nd=&ndash;
sh=&shy;
hy=&shy;
nbh=&#8209;
bul=&bullet;
ht=<!DOCTYPE html>\n<html>\n\i<head>\n\i\i<title>|</title>\n\i\i<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />\n\i\i<meta name="viewport" content="width=device-width, initial-scale=1" />\n\i\i<link rel="stylesheet" href="style.css" />\n\i\i<script src="scripts.js" type="text/javascript"></script>\n\i\i\n\i</head>\n\i<body>\n\i\n\i</body>\n</html>
sc=<script type="text/javascript" language="javascript">\n\i|\n</script>
js=<script type="text/javascript" language="javascript">\n\i|\n</script>
cs=<style type="text/css">\n\i|\n</style>
jss=<script src="|.js" type="text/javascript"></script>
css=<link rel="stylesheet" href="|.css" media="screen" />
fav=<link rel="shortcut icon" href="|favicon.ico" />
ns=<noscript>|</noscript>
a=<a href="|"></a>
ah=<a href="|"></a>
ahh=<a href=\\"|\\"></a>
at=<a href="|" target="_blank"></a>
atb=<a href="|" target="_blank"></a>
atbb=<a href=\\"|\\" target=\\"_blank\\"></a>
aj=<a href="javascript:;" class="|"></a>
ajc=<a href="javascript:;" class="|"></a>
ajs=<a href="javascript:;" style="|"></a>
aji=<a href="javascript:;" id="|"></a>
ajo=<a href="javascript:;" onclick="|"></a>
hj=href="javascript:;"
hjj=href=\\"javascript:;\\"
tb=target="_blank"
tbb=target=\\"_blank\\"
b=<b>|</b>
hp=<p>|</p>
h1=<h1>|</h1>
h2=<h2>|</h2>
h3=<h3>|</h3>
h4=<h4>|</h4>
h5=<h5>|</h5>
tab=<table>\n\i<tr>\n\i\i<td>\n\i\i\i|\n\i\i</td>\n\i</tr>\n</table>
tr=<tr>\n\i|\n</tr>
td=<td>|\n</td>
trd=<tr>\n\i<td>\n\i\i|\n\i</td>\n</tr>
tdd=<tr>\n\i<td>\n\i\i|\n\i</td>\n\i<td>\n\i</td>\n</tr>
trdd=<tr>\n\i<td>\n\i\i|\n\i</td>\n\i<td>\n\i</td>\n</tr>
sme=<small class="text-muted">\n\i<em>\n\i\i|\n\i</em>\n</small>
img=<img src="|" alt="" />
img64=<img src="data:image/png;base64, |" alt="" />
in=<input type="|" name="" value="" />
inp=<input type="|" name="" value="" />
inf=<input type="file" name="|" />
inch=<input type="checkbox" name="|" value="" />
ich=<input type="checkbox" name="|" value="" />
ic=<input type="checkbox" name="|" value="" />
itc=<input type="checkbox" name="|" value="" />
inpc=<input type="checkbox" name="|" value="" />
chk=checkbox
inn=<input type="number" value="|" />
inm=<input type="number" value="|" min="" max="" />
inh=<input type="hidden" name="|" value="" />
ith=<input type="hidden" name="|" value="" />
ih=<input type="hidden" name="|" value="" />
int=<input type="text" name="|" value="" />
inb=<input type="button" value="|" />
inr=<input type="radio" value="|" />
insu=<input type="submit" value="|" />
ints=<input type="submit" value="|" />
ra=<input type="radio" name="|" value="" />
btn=<button type="button">\n\t|\n</button>
bts=<button type="submit" class="btn btn-primary|">\n\t\n</button>
te=<textarea>|</textarea>
tex=<textarea>|</textarea>
la=<label>\n\i<input type="checkbox" name="|" value="" />\n\i\n</label>
lab=<label>\n\i<input type="checkbox" name="|" value="" />\n\i\n</label>
label=<label>\n\i<input type="checkbox" name="|" value="" />\n\i\n</label>
code=<code>|</code>
span=<span>|</span>
sp=<span>|</span>
spi=<span id="|"></span>
si=<span id="|"></span>
spc=<span class="|"></span>
d=<div>|</div>
div=<div>|\n</div>
di=<div id="|">\n</div>
ds=<div style="|">\n</div>
divi=<div id="|"></div>
dc=<div class="|">\n</div>
dic=<div class="|">\n</div>
divc=<div class="|">\n</div>
sel=<select name="|">\n\i<option></option>\n</select>
op=<option value="|"></option>
opt=<option value="|"></option>
optg=<optgroup label="|">\n\i<option value=""></option>\n</optgroup>
u=<ul>\n\i<li>\n\i\i|\n\i</li>\n</ul>
ul=<ul>\n\i<li>\n\i\i|\n\i</li>\n</ul>
o=<ol>\n\i<li>\n\i\i|\n\i</li>\n</ol>
ol=<ol>\n\i<li>\n\i\i|\n\i</li>\n</ol>
li=<li>\n\i\i|\n</li>
br=<br />
bn="<br />\\n"
bnn=. "<br />\\n";
ebn=echo "<br />\\n";
eh=echo "<hr />\\n";
ehr=echo "<hr />\\n";
ehn=echo "<hr />\\n";
brbr=<br><br>
hr=<hr />
form=<form action="|.php" method="post">\n\i\n</form>
forma=<form action="|" method="post" enctype="multipart/form-data">\n\i\n</form>
mp=method="post"
ifr=<iframe src="|"></iframe>
blo=<blockquote>\n\i|\n</blockquote>

; FONT AWESOMES
fas=<i class="fas fa-\c|"></i>
far=<i class="far fa-\c|"></i>
spin=<i class="fa fa-spinner fa-pulse"></i>
load=<i class="fa fa-spinner fa-pulse"></i>
tria=<i class="fa fa-exclamation-triangle"></i>
ale=<i class="fa fa-exclamation-triangle"></i>
tim=<i class="fas fa-times-circle"></i>
times=<i class="fas fa-times-circle"></i>
ext=<i class="fas fa-sm fa-external-link"></i>

; HTML ATTRIBUTES
ti=title="|"
tit=title="|"
oc=onclick="|"
onch=onchange="|"
onb=onblur="|"
c=class="|"
s=style="|"
sty=style=\\"|\\"
sz=size="|"
val=value="|"
aw=width="|"
n=name="|"
plh=placeholder="|"
ch=checked
chkd=checked
dis=disabled
roo=readonly
cen=center
ao=autocomplete="off"
ros=rowspan="|"
rows=rowspan="|"
col=colspan="|"
cols=colspan="|"
ali=align="|"
all=align="left"
alil=align="left"
alic=align="center"
alr=align="right"
alir=align="right"
vali=valign="|"
valt=valign="top"
valit=valign="top"
valc=valign="middle"
valic=valign="middle"
valm=valign="middle"
valim=valign="middle"
valb=valign="bottom"
valib=valign="bottom"
valba=valign="baseline"
bord=border="|"

; SMARTY
C={* | *}
CC={*\n|*}
P={php}\n\i|\n{/php}
SP={php}\n\i|\n{/php}
LIT={literal}\n\i\n{/literal}
lit={literal}
alit={/literal}
SM={$smarty.|}
sms={$smarty.server.PHP_SELF}
SMS={$smarty.server.PHP_SELF}
SPS={$smarty.server.PHP_SELF}
SSP={$smarty.server.PHP_SELF}
SSPS={$smarty.server.PHP_SELF}
PRR={\c|\|print_r:true}
SX={$|.}
XS={$|.}
I={if |}{/if}
II={if $|}{/if}
IF={if |}\n\i\n{/if}
IFF={if | eq ''}\n\i\n{/if}
IS={if $|\c eq } selected{/if}
E={else}
EL={else}\n\i|
EI={elseif $|}
ELI={elseif $|}\n\i|
IE={if |}|{else}{/if}
IFE={if |}\n\i\n{else}\n\i\n{/if}
CI={/if}
IC={/if}
AS={$| = ""}
ASS={assign var="|" value=""}
ASA={$| = ['', ]}
ESC=escape:'html'
DEF=default:'|'
PRE=<pre>\n\i{\c|\|@print_r}\n</pre>
MA={math equation="x | y" x=$ y=$}
CAP={capture assign="|"}\n\i\n{/capture}
SE={section name=| start=1 loop=}
ES={/section}
CS={/section}
FE={foreach from=| item=""}\n\i
FEK={foreach from=| key="k" item="v"}\n\i
FEN={foreach from=| key="key" item="val" name="_loop"}\n\i{assign var="i" value=$smarty.foreach._loop.index}
FEI={foreach from=| key="key" item="val" name="_loop"}\n\i{assign var="i" value=$smarty.foreach._loop.index}
FII=$smarty.foreach.n|.index
INDEX=$smarty.foreach.n|.index
CON={continue}
FEL={foreachelse}
EF={/foreach}
CF={/foreach}
FC={/foreach}
FEC={/foreach}
CFE={/foreach}
FO={for $item=| to $num}\n{/for}
NUM={(\c\|number_format:0:',':' ')\|replace:' ':'&nbsp;'}
IM={\c\|implode:'|'}
;INC={include file="$template/|.tpl"}
IMP={include file=$smarty.current_dir\|cat:"/|.tpl"}
IMPP={include file=$smarty.current_dir\|cat:"/|.tpl" assign=""}
INC={include file=$smarty.current_dir\|cat:"/|.tpl"}
INCC={include file=$smarty.current_dir\|cat:"/|.tpl" assign=""}
INCP={include_php file="|.php"}
INP={include_php file="|.php"}
PO={$smart.post.\c}
POE={$smart.post.\c\|escape:'html'}
ICH={if $smarty.post.\c} checked{/if}

; BOOTSTRAP
tc=text-center
tm=text-muted
alert=<div class="alert alert-danger">\n\i<h4>|</h4>\n\i\n</div>
alertd=<div class="alert alert-danger">\n\i<h4>|</h4>\n\i\n</div>
alerti=<div class="alert alert-info">\n\i<h4>|</h4>\n\i\n</div>
alerts=<div class="alert alert-success">\n\i<h4>|</h4>\n\i\n</div>
alertw=<div class="alert alert-warning">\n\i<h4>|</h4>\n\i\n</div>
alertt=<div class="alert alert-danger alert-dismissable fade in">\n\i<a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>\n\i<h4>|</h4>\n\i\n</div>
alerttd=<div class="alert alert-danger alert-dismissable fade in">\n\i<a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>\n\i<h4>|</h4>\n\i\n</div>
alertti=<div class="alert alert-info alert-dismissable fade in">\n\i<a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>\n\i<h4>|</h4>\n\i\n</div>
alertts=<div class="alert alert-success alert-dismissable fade in">\n\i<a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>\n\i<h4>|</h4>\n\i\n</div>
alerttw=<div class="alert alert-warning alert-dismissable fade in">\n\i<a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>\n\i<h4>|</h4>\n\i\n</div>
FORM=<form class="form-horizontal">\n\i<input type="hidden" name="" value="" />\n\i<div class="form-group">\n\i\i<label for="" class="col-sm-2 control-label">\n\i\i\i|\n\i\i</label>\n\i\i<div class="col-sm-10">\n\i\i\i<input type="text" id="" name="" value="" class="form-control" />\n\i\i</div>\n\i</div>\n\i<div class="row">\n\i\i<div class="col-sm-offset-2 col-sm-10">\n\i\i\i<button type="submit" class="btn btn-primary">\n\i\i\i\i<i class="fas fa-save"></i>\n\i\i\i\iSave\n\i\i\i</button>\n\i\i</div>\n\i</div>\n</form>
FORMI=<form class="form-inline">\n\i<input type="hidden" name="" value="" />\n\i<div class="form-group">\n\i\i<label for="">\n\i\i\i|\n\i\i</label>\n\i\i<input type="text" id="" name="" value="" class="form-control" />\n\i</div>\n\i<button type="submit" class="btn btn-primary">\n\i\i<i class="fas fa-save"></i>\n\i\iSave\n\i</button>\n</form>
GRP=<div class="form-group">\n\i<label for="" class="col-sm-2 control-label">\n\i\i|\n\i</label>\n\i<div class="col-sm-10">\n\i\i<input type="text" id="" name="" value="" class="form-control" />\n\i</div>\n</div>\n
GRP2=<div class="input-group">\n\i<input type="text" class="form-control" value="|" />\n\i<span class="input-group-btn">\n\i\i<button class="btn btn-primary" type="button">\n\i\i\i&nbsp;<i class="fas fa-search"></i>&nbsp;\n\i\i</button>\n\i</span>\n</div>
DROP=<div class="btn-group">\n\i<button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n\i\i| <span class="caret"></span>\n\i</button>\n\i<ul class="dropdown-menu">\n\i\i<li>\n\i\i\i<a href="#">Action</a>\n\i\i</li>\n\i\i<li role="separator" class="divider"></li>\n\i</ul>\n</div>
SELECT=<select name="" class="form-control">\n\i<option value=""></option>\n</select>
POP={capture assign="popover_content"}\n\i|\n{/capture}\n<a href="javascript:;" class="btn btn-info" data-toggle="popover" data-title="" data-html="true" data-content="{$popover_content\|escape:'html'}">\n\i<i class="fas fa-info-circle"></i>\n</a>
TOOL=<a href="javascript:;" class="btn btn-info" data-toggle="tooltip" title="|">\n\i<i class="fas fa-info-circle"></i>\n</a>
TOOLTIP={capture assign="tooltip_content"}\n\i|\n{/capture}\n<a href="javascript:;" class="btn btn-info" data-toggle="tooltip" title="" data-placement="top" data-html="true" data-content="{$tooltip_content\|escape:'html'}">\n\i<i class="fas fa-info-circle"></i>\n</a>
MODAL=<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#modal|">\n\i\n</button>\n\n<div id="modal" class="modal fade" tabindex="-1" role="dialog">\n\i<div class="modal-dialog" role="document">\n\i\i<div class="modal-content">\n\i\i\i<div class="modal-header">\n\i\i\i\i<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>\n\i\i\i\i<h4 class="modal-title">\n\i\i\i\i\i\n\i\i\i\i</h4>\n\i\i\i</div>\n\i\i\i<div class="modal-body">\n\i\i\i\i<div id="modalError" class="hidden">{* AJAX: ERRORS *}</div>\n\i\i\i\i<div id="modalLoading">\n\i\i\i\i\i<h3 class="text-muted text-center">\n\i\i\i\i\i\i<i class="fa fa-fw fa-spinner fa-pulse"></i>&nbsp;\n\i\i\i\i\i\iPlease wait…\n\i\i\i\i\i</h3>\n\i\i\i\i</div>\n\i\i\i\i<div id="modalFormBox">{* AJAX *}</div>\n\i\i\i</div>\n\i\i\i<div class="modal-footer">\n\i\i\i\i<button type="button" class="btn btn-primary">\n\i\i\i\i\i<i class="fas fa-save"></i>\n\i\i\i\i\iSave\n\i\i\i\i</button>\n\i\i\i</div>\n\i\i\i\i<button type="button" class="btn btn-default" data-dismiss="modal">\n\i\i\i\i\iClose\n\i\i\i\i</button>\n\i\i</div>\n\i</div>\n</div>
LOAD={capture assign="loading_text"}\n\i<i class="fa fa-spinner fa-pulse"></i> Please wait…\n{/capture}\n<button type="button" class="btn btn-primary" data-loading-text="{$loading_text\|escape:'html'}">\n\i|\n</button>

; XML
tx=$this->XML_data
xh=<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n
ad=addChild("|")
ax=asXML()
axx=asXML();

; mobile
meta=<meta name="|" content="" />
vp=<meta name="viewport" content="width=content-width,initial-scale=1" />
mobil=<meta name="viewport" content="width=device-width,user-scalable=0" />
box=box-sizing: border-box;
mm=@media (max-width: |px) {\n\i\n}